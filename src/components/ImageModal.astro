---
import { Image } from "@astrojs/image/components";

export interface Props {
    imageId: string;
    imageSrc: string;
    imageAlt: string;
}

const { imageId, imageSrc, imageAlt } = Astro.props;
---

<!-- Trigger the Modal -->
<Image
    id={`image-${imageId}`}
    alt={imageAlt}
    src={import(imageSrc)}
    class="modal-image rounded-md mb-4"
/>

<!-- style must be injected globally because the modal is appended as a direct child of the body -->
<style is:global>
    .modal-image {
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }

    .modal-image:hover {
        opacity: 0.7;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        padding-top: 200px;
        padding-inline: 24px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.9);
    }

    .modal-content {
        margin: auto;
        display: block;
        max-height: 90%;
        width: auto;
    }

    .caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    .modal-content,
    .caption {
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    @keyframes zoom {
        from {
            transform: scale(0);
        }
        to {
            transform: scale(1);
        }
    }

    .close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: lighter;
        transition: 0.3s;
    }

    .close:hover,
    .close:focus {
        color: #bbb;
        text-decoration: none;
        cursor: pointer;
    }

    @media only screen and (max-width: 700px) {
        .modal-content {
            width: 100%;
        }
    }
</style>

<script>
    // get all modal images on the screen
    const images = document.getElementsByClassName(
        "modal-image"
    ) as HTMLCollectionOf<HTMLImageElement>;

    // html for the modal to be appended on click
    // modal
    const modalElement = document.createElement("div");
    modalElement.className = "modal";
    modalElement.style.display = "block";

    // close button and append to modal as child
    const closeElement = document.createElement("span");
    closeElement.className = "close";
    closeElement.innerHTML = "&times;";

    modalElement.appendChild(closeElement);

    // modal content and append to modal as child
    const modalImgElement = document.createElement("img");
    modalImgElement.className = "modal-image modal-image-content modal-content";

    modalElement.appendChild(modalImgElement);

    // caption and append to modal as child
    const captionElement = document.createElement("div");
    captionElement.className = "caption";

    modalElement.appendChild(captionElement);

    // for each modal image on the screen, insert it into the modal
    // and add the alt text as caption
    Array.from(images).forEach((img) => {
        img.onclick = () => {
            modalImgElement.src = img.src;
            captionElement.innerHTML = img.alt;
            // append modal to body
            document.body.appendChild(modalElement);
        };

        // close the modal
        closeElement.onclick = () => {
            // completely remove from DOM to avoid incorrect rendering
            document.body.removeChild(modalElement);
        };
    });
</script>
